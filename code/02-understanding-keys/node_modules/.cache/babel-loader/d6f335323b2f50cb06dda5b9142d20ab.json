{"ast":null,"code":"var _jsxFileName = \"/home/tarmo/academind_react/react-complete-guide-code/code/02-understanding-keys/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [filteredItems, setFilteredItems] = useState(props.items);\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(props.items[0].date);\n    setFilteredItems(props.items.filter(expense => expense.date.getYear() === selectedYear));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), filteredItems.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"S9zzqLXYBVaAybZdSkIgE0ussPw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/tarmo/academind_react/react-complete-guide-code/code/02-understanding-keys/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filteredItems","setFilteredItems","items","filterChangeHandler","selectedYear","console","log","date","filter","expense","getYear","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAACK,KAAK,CAACK,KAAP,CAAlD;;AAEA,QAAMC,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CL,IAAAA,eAAe,CAACK,YAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeK,IAA3B;AACAN,IAAAA,gBAAgB,CAACJ,KAAK,CAACK,KAAN,CAAYM,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACF,IAAR,CAAaG,OAAb,OAA2BN,YAAzD,CAAD,CAAhB;AACD,GAJD;;AAQA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEN,YADZ;AAEE,QAAA,cAAc,EAAEK;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAMIH,aAAa,CAACW,GAAd,CAAmBF,OAAD,iBAChB,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACG,KAFjB;AAGE,QAAA,MAAM,EAAEH,OAAO,CAACI,MAHlB;AAIE,QAAA,IAAI,EAAEJ,OAAO,CAACF;AAJhB,SACOE,OAAO,CAACK,EADf;AAAA;AAAA;AAAA;AAAA,cADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjCD;;GAAMlB,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [filteredItems, setFilteredItems] = useState(props.items);\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(props.items[0].date);\n    setFilteredItems(props.items.filter(expense => expense.date.getYear() === selectedYear));\n  };\n\n\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {\n          filteredItems.map((expense) => (\n            <ExpenseItem\n              key={expense.id}\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n\n        }\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}